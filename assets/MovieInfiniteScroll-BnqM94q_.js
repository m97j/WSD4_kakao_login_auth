import{a as C}from"./axios-upsvKRUO.js";import{u as x}from"./wishlist-CgMhxFFX.js";import{q as z,r as n,w as p,d as B,e as K,m as G,_ as U}from"./index-D92mZtio.js";const j=z({name:"MovieGrid",props:{genreCode:{type:String,required:!0},apiKey:{type:String,required:!0},sortingOrder:{type:String,required:!0,default:"all"},voteEverage:{type:Number,required:!0,default:100},movies:{type:Array,required:!0}},setup(t){const v=n([]),c=n(1),a=n(null),u=n(null),h=n(4),l=n(!1),w=n(window.innerWidth<=768),R=n("grid"),s=n(!0),_=n(!1);let d=null;p(()=>t.genreCode,()=>{f()}),p(()=>t.sortingOrder,()=>{f()}),p(()=>t.voteEverage,()=>{f()});const{loadWishlist:I,toggleWishlist:b,isInWishlist:L}=x(),g=async()=>{if(l.value||!s.value)return;l.value=!0;let e=null;try{t.genreCode==="0"?e=await C.get("https://api.themoviedb.org/3/movie/popular",{params:{api_key:t.apiKey,language:"ko-KR",page:c.value,per_page:10}}):e=await C.get("https://api.themoviedb.org/3/discover/movie",{params:{api_key:t.apiKey,with_genres:t.genreCode,language:"ko-KR",page:c.value,per_page:10}});const o=e.data.results;if(o.length>0){let r=[...v.value,...o];t.sortingOrder!=="all"&&(r=r.filter(i=>i.original_language===t.sortingOrder)),r=r.filter(i=>{let m=!1;return t.voteEverage===-1?m=!0:t.voteEverage===-2?m=i.vote_average<=4:m=i.vote_average>=t.voteEverage&&i.vote_average<t.voteEverage+1,m}),v.value=r,c.value++}else s.value=!1}catch(o){console.error("Error fetching movies:",o)}finally{l.value=!1}},q=e=>e?`https://image.tmdb.org/t/p/w300${e}`:"/placeholder-image.jpg",M=()=>{if(a.value){const e=a.value.offsetWidth,o=w.value?100:300,r=w.value?10:15;h.value=Math.floor(e/(o+r))}},O=B(()=>v.value.reduce((e,o,r)=>{const i=Math.floor(r/h.value);return e[i]||(e[i]=[]),e[i].push(o),e},[])),y=()=>{w.value=window.innerWidth<=768,M()},E=()=>{if(!a.value)return;const e=a.value.lastElementChild;if(!e)return;const o=a.value.getBoundingClientRect().bottom,r=e.getBoundingClientRect().bottom;o>=r-100&&!l.value&&s.value&&g()},T=()=>{const e=window.pageYOffset||document.documentElement.scrollTop;_.value=e>300,E()},f=()=>{v.value=[],c.value=1,s.value=!0,g()},S=()=>{window.scrollTo({top:0,behavior:"smooth"}),f()},k=e=>{W(),d=window.setTimeout(()=>{b(e)},800)},W=()=>{d!==null&&(clearTimeout(d),d=null)};return K(()=>{g().then(()=>{E()}),M(),I(),window.addEventListener("resize",y),window.addEventListener("scroll",T);const e=new IntersectionObserver(o=>{o[0].isIntersecting&&!l.value&&s.value&&g()},{rootMargin:"100px",threshold:.1});u.value&&e.observe(u.value),G(()=>{window.removeEventListener("resize",y),window.removeEventListener("scroll",T),u.value&&e.unobserve(u.value)})}),{visibleMovieGroups:O,getImageUrl:q,gridContainer:a,loadingTrigger:u,rowSize:h,isLoading:l,currentView:R,hasMore:s,showTopButton:_,scrollToTopAndReset:S,startWishlistTimer:k,clearWishlistTimer:W,toggleWishlist:b,isInWishlist:L}}}),V=U(j,[["__scopeId","data-v-4592bf80"]]);export{V as M};
